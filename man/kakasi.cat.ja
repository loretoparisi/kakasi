KAKASI(1)                                               KAKASI(1)



NNAAMMEE
       KAKASI - Kanji kana simple inverter (漢字かな読み上げ)

SSYYNNOOPPSSIISS
       kkaakkaassii [[ooppttiioonnss]] [[jjiissyyoo11 [[jjiissyyoo22 [[jjiissyyoo11,,,,]]]]]]

DDEESSCCRRIIPPTTIIOONN
       _K_A_K_A_S_I  は漢字かな混じり文をかなだけの文やローマ字表記に変
       換することを目的として作られました。漢字の読めない端 末 を
       使った時や、漢字に不慣れな外国人や子供に文章を紹介したい時
       などに使えるかもしれません。標準入力から日本語の文章を入力
       すると、指定された文字セットに変換されて出力されます。

       例えば次の例では文中の漢字がひらがなに変換されます。

                 kakasi -JH < document

       バー ジョン 2.3.0 からは、分かち書き機能が追加されました。
       例えば次の例では、日本語文が分かち書きされて出力されます。

                 kakasi -w < document

       バー ジョン 2.3.5 からは、学年別ひらがな変換機能が追加され
       ました。例えば次の例では、小学4年生までに習った漢字は漢 字
       のまま表示し、それ以外の難しい漢字はひらがなに開いて出力さ
       れます。

                 kakasi -l4 < document

       _K_A_K_A_S_I は文字をローマ字に変換したり、 JIS x0201 のかたかな
       文 字や、 JIS x0208 のひらがな、かたかなの間で相互に変換で
       きます。 _K_A_K_A_S_I では文字セットとして次のものを理解します。
       ( カッコの中は _K_A_K_A_S_I のオプションとして指定する文字を表し
       ます。)


       ASCII (a) いわゆる ascii です。'〜', '＼' が含まれて い ま
                 す。


       JISROMAN (j)
                 い わゆる jis roman です。'￣' , '￥' が含まれて
                 います。


       GRAPHIC (g)
                 これについては正しい名称を知りません。 DEC 社 の
                 端末で表示される罫線などがこの文字セットに含まれ
                 ます。


       かたかな (k)
                 JIS x0201 で定義されている文字セットのうち GR の
                 部分です。


                 以 下は JIS x0208 を便宜上分割したものです。規格
                 上は全体で一つの文字セットです。


       漢字 (J)
                 16 区以降の `亜' に続く文字です。

       ひらがな (H)
                 4 区にあるひらがなです。

       かたかな (K)
                 5 区にあるかたかなです。ひらがなと 1 区ずれた だ
                 けでなく、独自の個性が発揮されているものです。

       記号 (E)
                 上記以外の文字です。

       次の文字セット間の変換が指定できます。


       ASCII        -> JISROMAN, 記号

       JISROMAN     -> ASCII, 記号

       GRAPHIC      -> ASCII, JISROMAN, 記号

       JISx0201のかたかな
                    -> ASCII, JISROMAN, カナ, ひらがな

       記号         -> ASCII, JISROMAN

       か たかな     -> ASCII, JISROMAN, JISx0201のかたかな, ひら
                    がな

       ひらがな     -> ASCII, JISROMAN, JISx0201のかたかな, カナ

       漢字         -> ASCII, JISROMAN, JISx0201のかたかな, カナ,
                    ひらがな

       漢 字からの変換では読み上げによって変換します。 JISx0201か
       たかな、かたかな、ひらがな、漢字から ASCII と JISROMAN  へ
       の変換ではローマ字変換を行います。


文文字字セセッットトのの変変換換指指定定オオププシショョンン
       -a[jE] EE   が 指定されると JISx0208 の記号への変換になりま
              す。それ以外のコードが指定されるか, 引数がないと 変
              換しません。


       -j[aE] EE   が 指定されると JISx0208 の記号への変換になりま
              す。


       -g[ajE]
              ちょっと無理があります。


       -k[ajKH]
              aajj を指定するとローマ字に変換し ま す。  KKHH   で は
              JISx0208 のかたかなやひらがなに変換します。


       -E[aj] JISx0208 の記号を ASCII または JIS ROMAN にします。
              現在のバージョンではそのほとんどが手抜き工事に なっ
              ています。


       -H[ajkK]
              aajj   を 指 定 す る と ロー マ字に変換します。 kk で
              はJISx0201のかたかなに、 KK ではかたかなに変換 し ま
              す。


       -K[ajkH]
              aajj   を 指 定 す る と ロー マ字に変換します。 kk で
              はJISx0201のかたかなに、 HH ではひらがなに変換 し ま
              す。


       -J[ajkHK]
              ま ず辞書を引いて読み上げ、 aajj が指定されるとローマ
              字に変換します。 kk ではJISx0201のかたかなに、 HH  で
              はひらがなに、 KK ではかたかなに変換します。


       Example:

           1. 漢字をひらがなに読み上げる

               kakasi -JH

           2. すべての JISx0208 で定義された文字をおきかえる。


               kakasi -Hk -Kk -Jk -Ea

           3. すべての文字を JISx0208 の文字におきかえる。

               kakasi -aE -jE -gE -kK

           4. ローマ字変換

               kakasi -Ha -Ka -Ja -Ea -ka

           5. かたかなとひらがなを交換

               kakasi -HK -KH


漢漢字字ココーーデディィンンググ
       _K_A_K_A_S_I では次の漢字コーディングシステムが使えます。

                  JIS, OLDJIS, EUC, DEC, SJIS


       -i{jis, oldjis, euc, dec, sjis}
              入 力側の漢字コードを指定します。もしも指定されない
              場合には入力から判断しようとします。 _K_A_K_A_S_I は入 力
              を ためこんで統計的に処理する方法がとれないので、最
              初の漢字らしい文字をもって判断します。

              1. ESC-$-B
              JIS コーディングと解釈します。またこれ以降は G0  に
              新JIS が指示されたものとします。

              2. ESC-$-@
              旧JIS   コーディングと解釈します。またこれ以降は G0
              に 旧JIS が指示されたものとします。

              3. 0x80 以上の値
              この時さらに 1 Byte を入力して、この 2 Byte で シフ
              トJIS   の JISx0208 文字として解釈できる場合、新JIS
              コーディングと解釈します。またこれ以降は GR は使 え
              ず シフトJIS の文字として解釈されます。

              4. 0x80 で上記に該当しない
              以降は EUC コーディングを仮定します。
              なお、オプションで指定する以外に DEC コーディングが
              指定されることはありません。
              最初にJISx0201のかたかなを表現する 0xa0 以上の コー
              ドに遭遇した場合と、 EUC コードなのに SJIS としても
              解釈され得る文字に遭遇すると誤って解釈します。つ ま
              り  ` 燹' から `螢' までの 945 文字のいずれかが EUC
              で表現されていても SJIS に解釈されてしまいます。


       -o{jis, oldjis, euc, dec, sjis}
               出力側の漢字コーディングを指定します。もしも指定さ
               れない場合には入力と同じにします。

       漢字のコーディングのモデルとしては、以下のように文字セット
       の指示と呼出しがされているものとします。

       JIS:

           GL -- G0 -- ASCII
           GR -- G1 -- JISx0201のかたかな
                 G2 -- JISx0201のかたかな
                 G3 -- JISx0201のかたかな

       JISx0208 の文字は ESC-$-B を用いて G0 に指示をして出力しま
       す。

       OLDJIS:

           GL -- G0 -- JISROMAN
           GR -- G1 -- JISx0201のかたかな
                 G2 -- JISx0201のかたかな
                 G3 -- JISx0201のかたかな

       JISx0208  の文字は ESC-$-@ を用いて G0 に旧JISを指示をして
       出力します。

       EUC:

           GL -- G0 -- ASCII
                 G1 -- JISx0201のかたかな
                 G2 -- JISx0201のかたかな
           GR -- G3 -- JISx0208 の文字

       JISx0201のかたかなの表示には ESC-N (シングル シフト)を使っ
       て、 GR に G2 を呼出して出力します。

       DEC:

           GL -- G0 -- ASCII
                 G1 -- GRAPHIC
                 G2 -- JISx0201のかたかな
           GR -- G3 -- JISx0208 の文字

       JISx0201 のかたかなの表示には ESC-} を使って GR に G2 を呼
       出して出力します。

       SJIS:

           GL -- G0 -- ASCII
                 G1 -- JISx0201のかたかな
                 G2 -- JISx0201のかたかな
                 G2 -- JISx0201のかたかな
           GR -- SHIFTJIS

       JISx0201のかたかなとJISx0208 の文字の表示は GR で 行 い ま
       す。

       入力側では次のようにエスケープシークエンスを解釈します。

       呼出し:
                  G0     G1     G2     G3
       GL:        SI     SO    ESC-n  ESC-o
       GR:              ESC-~  ESC-}  ESC-|

       シングルシフト:
                  G0     G1     G2     G3
                               ESC-N  ESC-O
                               (SS2)  (SS3)

       指示：
              ASCII    JISROMAN  GRAPHIC    か た か な     旧JIS
       新JIS
       G0:    ESC-(-B   ESC-(-J    ESC-(-0    ESC-(-I     ESC-$-@
       ESC-$-B
       G1:     ESC-)-B    ESC-)-J   ESC-)-0   ESC-)-I   ESC-$-)-@
       ESC-$-)-B
       G2:    ESC-*-B   ESC-*-J   ESC-*-0    ESC-*-I    ESC-$-*-@
       ESC-$-*-B
       G3:     ESC-+-B    ESC-+-J   ESC-+-0   ESC-+-I   ESC-$-+-@
       ESC-$-+-B


漢漢字字かかなな変変換換オオププシショョンン
       --JJxx あるいは --ww を使って漢字からの変換にのみ適用されるオプ
       ションです。他の変換には影響しません。

       -p      辞書中で照合したものが複数ある時に、そのすべてを表
              示します。多くの単語は複数の読みがあります。 _K_A_K_A_S_I
              で は インストール時に最も読まれそうな辞書を hosei-
              dict で与えていますが、それ以外に可能な読み方があれ
              ば {} でくくって表示します。

                      素子 -> {もとこ|そし}

       -s      漢字からの変換で変換ごとに空白等の区切を入れるよう
              にします。前にすでに改行、空白、TAB が入っていれ ば
              な にもしませんが、なければ空白文字を入れます。また
              後ろにも空白を入れます。漢字かな混じり文をローマ 字
              に変換する場合には不可欠ですね。

                  "漢字かな混じり文をローマ字に変換"
                  "  kan'zi  kana  ma  ziri  bun'  woro-ma  zi ni
              hen'kan' "


       -S     -s オプションあるいは -w オプション指定時に出力され
              る 区 切り文字はデフォルトでは空白文字 ' ' ですが、
              -S オプションで任意の ASCII 文字列を指定すること が
              できます。たとえば -s -S__ のようにオプションを与え
              ると、

                  "漢字かな混じり文を"

              が、

                  "漢字__かな__混__じり__文__を"

              となります。あるいは、-s -S"<sep>" とすれば、

                  "漢字<sep>かな<sep>混<sep>じり<sep>文<sep>を"

              となります。

       -f     ふりがなモード。つまり変換前の漢字の脇にその読み を
              差し込みます。

                "変換前の漢字の脇に"

                "変換前[へんかんまえ]の漢字[かんじ]の脇[わき]に"


       -F     ふりがなモード時の括弧として任意の ASCII 文字列を指
              定します。左右の括弧に対応して -Fl と -Fr という サ
              フィッ クスがつきます。たとえば、左側に左丸括弧を指
              定するには -Fl"(" と、右側に右丸括弧を指定するに は
              -Fr")" と指定します。

                "変換前(へんかんまえ)の漢字(かんじ)の脇(わき)に"

              あ るいは、-JF -f -Fl"<ruby>" -Fr"</ruby>" のように
              指定すると、以下のようにできます。

                "変換前<ruby>へんかんまえ</ruby>の漢字<ruby>か ん
              じ</ruby>の脇<ruby>わき</ruby>に"


       -c      漢字熟語中に含まれる、空白や改行を除いて読むように
              します。複数の行に改行で分割されたり、行の先頭に タ
              ブ や引用符がある時でもよみがなの解釈が行えるように
              します。読みとばす文字の default  は{改行 タブ   空
              白} ですが、任意の ascii 文字が追加できます。 JUNET
              のニュースならば、引用を示す -c'>' とするとい い で
              しょう。以下の例では -c">_" としたものです。

                  >> このバグについてはこれから検
                  >> 討してみます。  谷_山__浩_子

                  >> このバグについてはこれからけんとう
                  >> してみます。  たにやま___ひろこ_


       -C      漢字をローマ字に変換する場合に、先頭のアルファベッ
              トを大文字にします。 -Ja -Jj と共に使った場合のみ有
              効です。


       -U      漢字をローマ字に変換する場合に、アルファベットをす
              べて大文字にします。 -Ja -Jj と共に使った場合のみ有
              効です。

そそのの他他ののオオププシショョンン
       -rk     ローマ字への変換様式をヘボン式から訓令式に変更しま
              す。例えば、'し' は標準では 'shi' ですが、 'si'  に
              な り ま す。  --rr のみもしくは、 --rrhh などの指定では
              _H_e_p_b_u_r_n _(ヘボン_) 式になります。


       -t     ローマ字への変換で従来のヘボン式を利用します。

       -u     文字の出力ごとに fffflluusshh(()) を呼びます。 system V  な
              ど で端末出力をすぐ見たい時に必要になるかもしれませ
              ん。

       -w     分かち書きをします。詳しくは、README.wakati をご 覧
              下さい。

       -l[123456jn]
              学 年 別 ひらがな変換機能(仮名表記モード)を指定しま
              す。詳しくは、README.level をご覧下さい。

       -L[123456jn]
              学年別ひらがな変換機能(振り仮名モード)を指 定 し ま
              す。詳しくは、README.level をご覧下さい。

辞辞書書
       _K_A_K_A_S_I  ではユーザの辞書を任意に追加することができます。使
       用できる辞書は _S_K_K の辞書に準じたフォーマット か  _W_n_n   の
       ASCII   形 式などのように、 1 行に読みと熟語の順に並んでい
       て、空白、タブ、カンマ等で区切られているものが使えます。辞
       書の漢字コーディングは JIS または EUC に限ります。詳細につ
       いては JISYO というファイルを参照してください。

環環境境変変数数
       KANWADICTPATH
              kanwadict の場所 (ファイル名を含むフルパス) を指 定
              す  る  こ  と  が で き ま す。 省 略 時 は  $pre-
              fix/share/kakasi/kanwadict を設定したのと同じことに
              なります。

       ITAIJIDICTPATH
              itaijidict の場所 (ファイル名を含むフルパス) を指定
              す る こ と が で き ま す。 省  略  時  は   $pre-
              fix/share/kakasi/itaijidict  を設定したのと同じこと
              になります。

AAUUTTHHOORR
       高橋 裕信 <takahasi@tiny.or.jp>

FFIILLEESS
       $prefix/share/kakasi/kanwadict
              _K_A_K_A_S_I の基本辞書です。インストール時に mkkanwa  に
              よって作成されます。

SSEEEE AALLSSOO
       mkkanwa(1)

DDIIAAGGNNOOSSTTIICCSS
       辞書にトラブルがあれば 0 以外の値を返します。

BBUUGGSS
       何 かありましたら、高橋さんにではなく、KAKASI プロジェクト
       <kakasi-dev@namazu.org> までお知らせ下さい。



                              LOCAL                     KAKASI(1)
